{"version":3,"file":"http.js","sources":["../../src/instrumentation/http.ts"],"sourcesContent":["import { Notifier } from '../notifier';\n\nconst SPAN_NAME = 'http';\n\nexport function patch(http, airbrake: Notifier): void {\n  if (http.request) {\n    http.request = wrapRequest(http.request, airbrake);\n  }\n  if (http.get) {\n    http.get = wrapRequest(http.get, airbrake);\n  }\n}\n\nexport function wrapRequest(origFn, airbrake: Notifier) {\n  return function abRequest() {\n    const metric = airbrake.scope().routeMetric();\n    metric.startSpan(SPAN_NAME);\n\n    const req = origFn.apply(this, arguments);\n    if (!metric.isRecording()) {\n      return req;\n    }\n\n    const origEmit = req.emit;\n    req.emit = function (type, _res) {\n      if (type === 'response') {\n        metric.endSpan(SPAN_NAME);\n      }\n      return origEmit.apply(this, arguments);\n    };\n\n    return req;\n  };\n}\n"],"names":[],"mappings":";;;;AAEA,IAAM,SAAS,GAAG,MAAM,CAAC;SAET,KAAK,CAAC,IAAI,EAAE,QAAkB;IAC5C,IAAI,IAAI,CAAC,OAAO,EAAE;QAChB,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KACpD;IACD,IAAI,IAAI,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;KAC5C;AACH,CAAC;SAEe,WAAW,CAAC,MAAM,EAAE,QAAkB;IACpD,OAAO,SAAS,SAAS;QACvB,IAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,CAAC;QAC9C,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAE5B,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;YACzB,OAAO,GAAG,CAAC;SACZ;QAED,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;QAC1B,GAAG,CAAC,IAAI,GAAG,UAAU,IAAI,EAAE,IAAI;YAC7B,IAAI,IAAI,KAAK,UAAU,EAAE;gBACvB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAC3B;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SACxC,CAAC;QAEF,OAAO,GAAG,CAAC;KACZ,CAAC;AACJ;;;;;"}